{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qG,MCEzD,SAASC,EAAUC,GACjB,IAAMC,EAAcD,EAAOE,KAAI,SAAAC,G,OAASA,EAAMC,QAC9C,GAAIH,EAAYI,OAAS,EAAG,CAC1B,IAAMC,EAAgBL,EAAYM,OAAO,EAAG,GAG5C,OAFAD,EAAcE,KAAK,SAEZF,EAAcG,KAAK,MAE5B,OAAOR,EAAYQ,KAAK,MAGnB,SAASC,EAAaC,GAC3B,OAAOA,EACJT,KAAI,SAAAU,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOd,EAAMY,EAANZ,OAAQe,EAAYH,EAAZG,aAAcC,EAAEJ,EAAFI,GAAIC,EAAYL,EAAZK,aAC9CC,EAAO,IAAIC,KAAKJ,GAAcK,cACpC,OAAIP,EACK,gCAEsDQ,OADxCL,EAAG,2EAC0DK,OAArBR,EAAY,WAGvEQ,OAHgFP,EAAM,qFAI3DO,OAD3BP,EAAM,gDAC4CO,OAAvBtB,EAAUC,GAAQ,OAChBqB,OADqBH,EAAK,kDACFG,OAAxBJ,EAAaK,QAAQ,GAAG,wBAGlD,iCAEyBD,OADRL,EAAG,4CACkBK,OAAbE,EAAAC,GAAI,WAEhCH,OAFyCP,EAAM,mDAGpBO,OAD3BP,EAAM,gDAC4CO,OAAvBtB,EAAUC,GAAQ,OAChBqB,OADqBH,EAAK,kDACFG,OAAxBJ,EAAaK,QAAQ,GAAG,qBAG1Db,KAAK,ICrCVe,EAAiB7B,EAAA,SAAA8B,aAA6C,SAAW9B,EAAA,SAAA+B,QAA6C,SCCtH,IAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,qBAChCC,WAAYF,SAASC,cAAc,gBACnCE,SAAUH,SAASC,cAAc,gBAGnC,WACE,IAAMG,EAAoBpC,KAAKC,MAAMoC,aAAaC,QAAQ,YACpDC,EAAkBvC,KAAKC,MAAMoC,aAAaC,QAAQ,UACxD,GAA+C,QAA1CC,GAAmBH,GACtB,OAAON,EAAKC,QAAQS,UAClB,wDAC4B,OAAtBJ,GACRN,EAAKC,QAAQS,UAAY3B,EAAa0B,GACtCT,EAAKK,SAASM,UAAUC,IAAI,YAE5BZ,EAAKC,QAAQS,UAAY3B,EAAauB,GACtCN,EAAKI,WAAWO,UAAUC,IAAI,WAIlCC,G","sources":["node_modules/@parcel/runtime-js/lib/runtime-833182c3ae66cf9c.js","src/js/markup-library-card.js","node_modules/@parcel/runtime-js/lib/runtime-648cbbe60df3de45.js","src/js/append-my-library.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6sSxf\\\":\\\"my-library.2eb4fd7c.js\\\",\\\"jXq3O\\\":\\\"foto.88e9f0bc.jpg\\\"}\"));","import img from '../images/foto.jpg';\n\nfunction getGenres(genres) {\n  const movieGenres = genres.map(genre => genre.name);\n  if (movieGenres.length > 2) {\n    const removedGenres = movieGenres.splice(0, 2);\n    removedGenres.push('Other');\n\n    return removedGenres.join(', ');\n  }\n  return movieGenres.join(', ');\n}\n\nexport function markupMovies(movies) {\n  return movies\n    .map(({ poster_path, title, genres, release_date, id, vote_average }) => {\n      const date = new Date(release_date).getFullYear();\n      if (poster_path) {\n        return `\n      <li class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\" />\n        <div class=\"card__wrap\">\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${getGenres(genres)} | ${date}</span>\n        </p> <p class=\"cart__rating\">${vote_average.toFixed(1)}</p> </div>\n  </li>`;\n      }\n      return `\n      <div class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"${img}\" alt=\"${title}\" />\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${getGenres(genres)} | ${date}</span>\n        </p> <p class=\"cart__rating\">${vote_average.toFixed(1)}</p>\n  </div>`;\n    })\n    .join('');\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('6sSxf') + require('./helpers/bundle-manifest').resolve(\"jXq3O\");","import { markupMovies } from './markup-library-card';\nconst refs = {\n  gallery: document.querySelector('#library__gallery'),\n  watchedBtn: document.querySelector('.watched-btn'),\n  queueBtn: document.querySelector('.queue-btn'),\n};\n\nfunction appendMoviesInLibrary() {\n  const userMoviesWatched = JSON.parse(localStorage.getItem('watched'));\n  const userMoviesQueue = JSON.parse(localStorage.getItem('queue'));\n  if ((userMoviesQueue || userMoviesWatched) === null) {\n    return refs.gallery.innerHTML =\n      '<h1 style=\"font-size=80px\">Your Library is empty</h1>';\n  } else if(userMoviesWatched === null){\n    refs.gallery.innerHTML = markupMovies(userMoviesQueue);\n    refs.queueBtn.classList.add('active');\n  } else {\n    refs.gallery.innerHTML = markupMovies(userMoviesWatched);\n    refs.watchedBtn.classList.add('active');\n  }\n    \n}\nappendMoviesInLibrary();\n"],"names":["parcelRequire","register","JSON","parse","$fc824af3840109e5$var$getGenres","genres","movieGenres","map","genre","name","length","removedGenres","splice","push","join","$fc824af3840109e5$export$2000cb3382d6fe40","movies","param","poster_path","title","release_date","id","vote_average","date","Date","getFullYear","concat","toFixed","$parcel$interopDefault","$877c8e785de22694$exports","getBundleURL","resolve","$cbca78a30f73e0d7$var$refs","gallery","document","querySelector","watchedBtn","queueBtn","userMoviesWatched","localStorage","getItem","userMoviesQueue","innerHTML","classList","add","$cbca78a30f73e0d7$var$appendMoviesInLibrary"],"version":3,"file":"my-library.2eb4fd7c.js.map"}