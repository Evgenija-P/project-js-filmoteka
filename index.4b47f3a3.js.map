{"mappings":"qhBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gMCAzDH,EAAA,SCAA,IAAAI,EAAAJ,EAAA,S,aCAA,I,EAAAK,EAAAL,EAAA,SCAAM,EAAiB,IAAAC,IAAoBP,EAAA,SAAAQ,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,iBCA5F,MAAMC,EAAsBC,SAASC,cAAc,yBACnD,IAAIC,EAAoB,KACxB,SAASC,EAAWC,EAAMC,GAKxBH,EAAoBE,EACpB,IAAIE,EAAS,GACTF,EAAO,IACTE,GAAU,sBAERF,EAAO,IACTE,GAAU,cAERF,EAAO,IACTE,GAAU,gBAERF,EAAO,IACTE,GAAU,OAhBSF,EAAO,UAkBxBA,EAAO,IACTE,GAAU,OAlBOF,EAAO,UAoB1BE,GAAU,OAAOF,SACbC,EAAa,EAAID,IACnBE,GAAU,OApBMF,EAAO,UAsBrBC,EAAa,EAAID,IACnBE,GAAU,OAxBQF,EAAO,UA0BvBC,EAAa,EAAID,IACnBE,GAAU,gBAERD,EAAaD,IACfE,GAAU,OAAOD,SACjBC,GAAU,sBAEZC,QAAQC,IAAIH,GACZN,EAAoBU,UAAYH,EAsBlCP,EAAoBW,iBAAiB,SApBrC,SAAsBC,GACpB,GAA8B,OAA1BA,EAAMC,OAAOC,SACf,OAEF,GAAiC,QAA7BF,EAAMC,OAAOE,YACf,OAEF,GAAiC,OAA7BH,EAAMC,OAAOE,YAEf,YADGZ,GAAkB,GAGvB,GAAiC,OAA7BS,EAAMC,OAAOE,YAEf,YADGZ,GAAkB,GAGvB,MAAME,EAAOO,EAAMC,OAAOE,YAE1BP,QAAQC,IAAIG,EAAMC,QAClBL,QAAQC,IAAI,mBAAoBJ,MCvDlC,MAAMW,EAAS,IJAA,MAKbC,oBACE,MAAMC,QAAiBC,EAAA5B,GAAM6B,IAC3B,GAAGC,EAAA3B,oCAAoC2B,EAAAC,kBAIzC,OAFAC,KAAKC,gBAEEN,EAETM,gBACED,KAAKlB,MAAQ,EAbfoB,cACEF,KAAKlB,KAAO,IIDVqB,EAAO,CACXC,QAAS1B,SAASC,cAAc,uBAYlC0B,EAAAC,QAAQC,KAAK,CACXC,SAAU,QAVLd,iBACL,IACE,MAAMe,KAAEA,SAAehB,EAAOiB,cAC9BP,EAAKC,QAAQO,mBAAmB,YAA0BF,EAAKG,QHR9DC,KAAI,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,UAAEA,EAASC,aAAEA,EAAYC,GAAEA,MACnD,MAAMC,EAAO,IAAIC,KAAKH,GAAcI,cACpC,OAAIP,EACK,gCACcI,2EACwCJ,WAAqBC,qFAGhFA,iDAC2B,EAAA9C,EAAAqD,mBACzBN,QACKG,yCAIJ,iCACiBD,4CACQtB,EAAA1B,YAAa6C,mDAEzCA,iDAC2B,EAAA9C,EAAAqD,mBACzBN,QACKG,sCAIZI,KAAK,KGjBN1C,EAAW4B,EAAK3B,KAAM2B,EAAKe,aAC3B,MAAOC,GACPxC,QAAQC,IAAIuC,EAAMC,UAMtBC,GACAtB,EAAAC,QAAQsB,S","sources":["node_modules/@parcel/runtime-js/lib/runtime-626b0047a6af5be6.js","src/index.js","src/js/fetch-movies-homepg.js","src/js/markup-movie-card.js","node_modules/@parcel/runtime-js/lib/runtime-be25ff25a153c02b.js","src/js/pagination.js","src/js/append-movie-cards.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.4b47f3a3.js\\\",\\\"fynZF\\\":\\\"foto.88e9f0bc.jpg\\\",\\\"5UbS1\\\":\\\"index.be9cc2d9.css\\\",\\\"4627Z\\\":\\\"my-library.4b7abfd9.js\\\"}\"));","import './js/add-watch_queue';\nimport './js/append-movie-cards';\nimport './js/button-up-down';\nimport './js/fetch-movies';\nimport './js/film-modal';\nimport './js/group-modal';\nimport './js/open-film-modal';\nimport './js/search-movies';\nimport './js/pagination';\n","import axios from 'axios';\n\nimport { API_KEY, URL } from './variables';\n\nexport default class NewApi {\n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchMovies() {\n    const response = await axios.get(\n      `${URL}/3/trending/movie/day?api_key=${API_KEY}&page=5`\n    );\n    this.incrementPage();\n\n    return response;\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n}\n","import { findGenresOfMovie } from './find-genres-of-popular-movies';\nimport img from '../images/foto.jpg';\nexport function markupMovies(movies) {\n  return movies\n    .map(({ poster_path, title, genre_ids, release_date, id }) => {\n      const date = new Date(release_date).getFullYear();\n      if (poster_path) {\n        return `\n      <li class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\" />\n        <div class=\"card__wrap\">\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${findGenresOfMovie(\n            genre_ids\n          )} | ${date}</span>\n        </p> </div>\n  </li>`;\n      }\n      return `\n      <div class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"${img}\" alt=\"${title}\" />\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${findGenresOfMovie(\n            genre_ids\n          )} | ${date}</span>\n        </p>\n  </div>`;\n    })\n    .join('');\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fynZF\")).toString();","const paginationContainer = document.querySelector('.pagination-container');\nlet globalCurrentPage = null;\nfunction pagination(page, totalPages) {\n  const beforeToPage = page - 2;\n  const beforePage = page - 1;\n  const afterToPage = page + 2;\n  const afterPage = page + 1;\n  globalCurrentPage = page;\n  let marcup = '';\n  if (page > 1) {\n    marcup += '<li>&#129144;</li>';\n  }\n  if (page > 1) {\n    marcup += '<li>1</li>';\n  }\n  if (page > 4) {\n    marcup += '<li>...</li>';\n  }\n  if (page > 3) {\n    marcup += `<li>${beforeToPage}</li>`;\n  }\n  if (page > 2) {\n    marcup += `<li>${beforePage}</li>`;\n  }\n  marcup += `<li>${page}</li>`;\n  if (totalPages - 1 > page) {\n    marcup += `<li>${afterPage}</li>`;\n  }\n  if (totalPages - 2 > page) {\n    marcup += `<li>${afterToPage}</li>`;\n  }\n  if (totalPages - 3 > page) {\n    marcup += `<li>...</li>`;\n  }\n  if (totalPages > page) {\n    marcup += `<li>${totalPages}</li>`;\n    marcup += '<li>&#129146;</li>';\n  }\n  console.log(totalPages);\n  paginationContainer.innerHTML = marcup;\n}\nfunction onPagination(event) {\n  if (event.target.nodeName !== 'LI') {\n    return;\n  }\n  if (event.target.textContent === '...') {\n    return;\n  }\n  if (event.target.textContent === 'ü°∏') {\n    globalCurrentPage -= 1;\n    return;\n  }\n  if (event.target.textContent === 'ü°∫') {\n    globalCurrentPage += 1;\n    return;\n  }\n  const page = event.target.textContent;\n\n  console.log(event.target);\n  console.log('–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', page);\n}\npaginationContainer.addEventListener('click', onPagination);\nexport { pagination };\n","import NewApi from './fetch-movies-homepg';\nimport { markupMovies } from './markup-movie-card';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { pagination } from './pagination';\nconst newApi = new NewApi();\nconst refs = {\n  gallery: document.querySelector('#homepage__gallery'),\n};\n\nexport async function appendMarkupMovies() {\n  try {\n    const { data } = await newApi.fetchMovies();\n    refs.gallery.insertAdjacentHTML('beforeend', markupMovies(data.results));\n    pagination(data.page, data.total_pages);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nLoading.dots({\n  svgColor: 'red',\n});\nappendMarkupMovies();\nLoading.remove();\n"],"names":["parcelRequire","register","JSON","parse","$2shzp","$4sSfE","$dbae0ffdab0f0b78$exports","URL","resolve","import","meta","url","toString","$1bab9c519cfa82bc$var$paginationContainer","document","querySelector","$1bab9c519cfa82bc$var$globalCurrentPage","$1bab9c519cfa82bc$export$22fa394f3ba39578","page","totalPages","marcup","console","log","innerHTML","addEventListener","event","target","nodeName","textContent","$5d03798e23670e26$var$newApi","async","response","$parcel$interopDefault","get","$e4SnA","API_KEY","this","incrementPage","constructor","$5d03798e23670e26$var$refs","gallery","$dSs1Y","Loading","dots","svgColor","data","fetchMovies","insertAdjacentHTML","results","map","poster_path","title","genre_ids","release_date","id","date","Date","getFullYear","findGenresOfMovie","join","total_pages","error","message","$5d03798e23670e26$export$513f1e42f4faf942","remove"],"version":3,"file":"index.4b47f3a3.js.map"}