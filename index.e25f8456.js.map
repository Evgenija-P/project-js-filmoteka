{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gMCAzDH,EAAA,S,WCAA,I,EAAAI,EAAAJ,EAAA,S,gBCAAI,EAAAJ,EAAA,S,kEAGeK,ECHZ,W,sBDGkBC,I,aAEjBC,KAAKC,KAAO,E,gBAGRC,IAAA,c,MAAN,W,kBAAAC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,E,kFAAiBJ,EAAAK,GAAMC,IAC3B,GAAuCC,OAApCC,EAAAC,IAAI,kCAAgDF,OAAhBC,EAAAE,QAAQ,UAAkBH,OAAVI,EAAKb,O,cADxDM,EAAQQ,EAAAC,KAGdF,EAAKG,gB,kBAEEV,G,0CANT,K,CAQAL,IAAA,gB,MAAA,WACEF,KAAKC,MAAQ,M,ECjBd,GCAHiB,EAAAzB,EAAA,SAEO,SAAS0B,EAAaC,GAC3B,OAAOA,EACJC,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAcC,EAAEL,EAAFK,GAC7CC,EAAO,IAAIC,KAAKH,GAAcI,cACpC,OAAIP,EACK,gCAEsDb,OADxCiB,EAAG,2EAC0DjB,OAArBa,EAAY,WAGvEb,OAHgFc,EAAM,qFAI3Dd,OAD3Bc,EAAM,gDAGCd,QAFoB,EAAAQ,EAAAa,mBACzBN,GACA,OAAUf,OAALkB,EAAK,yCAIT,iCAEyBlB,OADRiB,EAAG,4CACkBjB,OAAbP,EAAA6B,GAAI,WAEhCtB,OAFyCc,EAAM,mDAGpBd,OAD3Bc,EAAM,gDAGCd,QAFoB,EAAAQ,EAAAa,mBACzBN,GACA,OAAUf,OAALkB,EAAK,sCAIjBK,KAAK,IC9BVD,EAAiBvC,EAAA,SAAAyC,aAA6C,SAAWzC,EAAA,SAAA0C,QAA6C,S,iBJIhHC,EAAS,IAAItC,EACbuC,EAAO,CACXC,QAASC,SAASC,cAAc,uB,SAGZC,I,OAAAC,EAAkBC,MAAA3C,KAAA4C,W,SAAlBF,I,OAAAA,EAAfvC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEKuC,E,2FAAeT,EAAOU,c,OAAxBD,EAAM9B,EAAAC,KAAJ6B,KACRR,EAAKC,QAAQS,mBAAmB,YAAa5B,EAAa0B,EAAKG,U,gDAE/DC,QAAQC,IAAInC,EAAAoC,GAAMC,S,0DALkBT,MAAA3C,KAAA4C,WAQxCS,EAAAC,QAAQC,KAAK,CACXC,SAAU,QAGZf,IAEAY,EAAAC,QAAQG,S,aKpBSlB,SAASC,cAAc,cAC/BkB,iBAAiB,SAC1B,WACEL,EAAAC,QAAQC,KAAK,CACXC,SAAU,QAEZf,IACAY,EAAAC,QAAQG,Y","sources":["node_modules/@parcel/runtime-js/lib/runtime-2299ea3fbcd794e9.js","src/index.js","src/js/append-movie-cards.js","src/js/fetch-movies-homepg.js","<<jsx-config-pragma.js>>","src/js/markup-movie-card.js","node_modules/@parcel/runtime-js/lib/runtime-074636b54421f431.js","src/js/load-more_btn.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.e25f8456.js\\\",\\\"jXq3O\\\":\\\"foto.88e9f0bc.jpg\\\",\\\"5UbS1\\\":\\\"index.4aae61a6.css\\\",\\\"6IIJ4\\\":\\\"my-library.dd02da15.js\\\"}\"));","import './js/add-queue';\nimport './js/add-watch';\nimport './js/load-more_btn';\nimport './js/button-up-down';\nimport './js/group-modal';\nimport './js/append-movie-cards';\nimport './js/open-film-modal';\nimport './js/film-modal';\nimport './js/fatch-movies';\nimport './js/search-movies';\n","import NewApi from './fetch-movies-homepg';\nimport { markupMovies } from './markup-movie-card';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst newApi = new NewApi();\nconst refs = {\n  gallery: document.querySelector('#homepage__gallery'),\n};\n\nexport async function appendMarkupMovies() {\n  try {\n    const { data } = await newApi.fetchMovies();\n    refs.gallery.insertAdjacentHTML('beforeend', markupMovies(data.results));\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nLoading.dots({\n  svgColor: 'red',\n});\n\nappendMarkupMovies();\n\nLoading.remove();\n","import axios from 'axios';\nimport { API_KEY, URL } from './variables';\n\nexport default class NewApi {\n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchMovies() {\n    const response = await axios.get(\n      `${URL}/3/trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n    );\n    this.incrementPage();\n\n    return response;\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n}\n",null,"import { findGenresOfMovie } from './find-genres-of-popular-movies';\nimport img from '../images/foto.jpg';\nexport function markupMovies(movies) {\n  return movies\n    .map(({ poster_path, title, genre_ids, release_date, id }) => {\n      const date = new Date(release_date).getFullYear();\n      if (poster_path) {\n        return `\n      <li class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\" />\n        <div class=\"card__wrap\">\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${findGenresOfMovie(\n            genre_ids\n          )} | ${date}</span>\n        </p> </div>\n  </li>`;\n      }\n      return `\n      <div class=\"card\" id=\"${id}\">\n        <img class=\"card__img\" src=\"${img}\" alt=\"${title}\" />\n        <p class=\"card__titel\">\n        ${title} <br />\n          <span class=\"card__text\">${findGenresOfMovie(\n            genre_ids\n          )} | ${date}</span>\n        </p>\n  </div>`;\n    })\n    .join('');\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"jXq3O\");","import { appendMarkupMovies } from './append-movie-cards';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst loadMore = document.querySelector('.load-more');\nloadMore.addEventListener('click', onLoadMore);\nfunction onLoadMore() {\n  Loading.dots({\n    svgColor: 'red',\n  });\n  appendMarkupMovies();\n  Loading.remove();\n}\n"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$751852237bab4078$export$2e2bcd8739ae039","NewApi","this","page","key","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","get","concat","$8oFZ1","URL","API_KEY","_this","_ctx","sent","incrementPage","$axuPv","$d7da01d1ea7c1182$export$2000cb3382d6fe40","movies","map","param","poster_path","title","genre_ids","release_date","id","date","Date","getFullYear","findGenresOfMovie","$0b521630115e397b$exports","join","getBundleURL","resolve","$f8ac2927277a9804$var$newApi","$f8ac2927277a9804$var$refs","gallery","document","querySelector","$f8ac2927277a9804$export$513f1e42f4faf942","$f8ac2927277a9804$var$_appendMarkupMovies","apply","arguments","data","fetchMovies","insertAdjacentHTML","results","console","log","t0","message","$7rQOT","Loading","dots","svgColor","remove","addEventListener"],"version":3,"file":"index.e25f8456.js.map"}